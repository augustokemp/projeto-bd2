--
-- PostgreSQL database dump
--

-- Dumped from database version 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1)
-- Dumped by pg_dump version 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: categorias; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.categorias (
    idcategoria integer NOT NULL,
    descricao character varying(50) NOT NULL
);


ALTER TABLE public.categorias OWNER TO postgres;

--
-- Name: categorias_idcategoria_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.categorias_idcategoria_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.categorias_idcategoria_seq OWNER TO postgres;

--
-- Name: categorias_idcategoria_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.categorias_idcategoria_seq OWNED BY public.categorias.idcategoria;


--
-- Name: clientes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.clientes (
    idcliente integer NOT NULL,
    nome character varying(50) NOT NULL,
    email character varying(50) NOT NULL,
    logradouro character varying(50) NOT NULL,
    numero character varying(50) NOT NULL,
    complemento character varying(50) NOT NULL,
    cep character varying(8) NOT NULL,
    cidade character varying(50) NOT NULL,
    uf character varying(2) NOT NULL
);


ALTER TABLE public.clientes OWNER TO postgres;

--
-- Name: clientes_idcliente_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.clientes_idcliente_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.clientes_idcliente_seq OWNER TO postgres;

--
-- Name: clientes_idcliente_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.clientes_idcliente_seq OWNED BY public.clientes.idcliente;


--
-- Name: entradas; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.entradas (
    numeronfentrada integer NOT NULL,
    data date NOT NULL,
    valortotal numeric,
    idfornecedor integer NOT NULL
);


ALTER TABLE public.entradas OWNER TO postgres;

--
-- Name: entradas_numeronfentrada_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.entradas_numeronfentrada_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.entradas_numeronfentrada_seq OWNER TO postgres;

--
-- Name: entradas_numeronfentrada_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.entradas_numeronfentrada_seq OWNED BY public.entradas.numeronfentrada;


--
-- Name: fornecedores; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.fornecedores (
    idfornecedor integer NOT NULL,
    nome character varying(50) NOT NULL,
    email character varying(50) NOT NULL,
    logradouro character varying(50),
    numero integer,
    complemento character varying(50),
    cep character varying(50),
    cidade character varying(50),
    uf character varying(2)
);


ALTER TABLE public.fornecedores OWNER TO postgres;

--
-- Name: fornecedores_idfornecedor_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.fornecedores_idfornecedor_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.fornecedores_idfornecedor_seq OWNER TO postgres;

--
-- Name: fornecedores_idfornecedor_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.fornecedores_idfornecedor_seq OWNED BY public.fornecedores.idfornecedor;


--
-- Name: itens_entrada; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.itens_entrada (
    iditemcompra integer NOT NULL,
    quantidade integer NOT NULL,
    valorunitario numeric NOT NULL,
    idproduto integer NOT NULL,
    numeronfentrada integer NOT NULL
);


ALTER TABLE public.itens_entrada OWNER TO postgres;

--
-- Name: itens_entrada_iditemcompra_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.itens_entrada_iditemcompra_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.itens_entrada_iditemcompra_seq OWNER TO postgres;

--
-- Name: itens_entrada_iditemcompra_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.itens_entrada_iditemcompra_seq OWNED BY public.itens_entrada.iditemcompra;


--
-- Name: itens_saida; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.itens_saida (
    iditemvenda integer NOT NULL,
    quantidade integer NOT NULL,
    valorunitario numeric NOT NULL,
    numeronfsaida integer NOT NULL,
    idproduto integer NOT NULL
);


ALTER TABLE public.itens_saida OWNER TO postgres;

--
-- Name: itens_saida_iditemvenda_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.itens_saida_iditemvenda_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.itens_saida_iditemvenda_seq OWNER TO postgres;

--
-- Name: itens_saida_iditemvenda_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.itens_saida_iditemvenda_seq OWNED BY public.itens_saida.iditemvenda;


--
-- Name: produtos; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.produtos (
    idproduto integer NOT NULL,
    descricao character varying(50) NOT NULL,
    precocusto numeric DEFAULT 0,
    precovenda numeric DEFAULT 0,
    quantidadeestoque integer DEFAULT 0,
    idcategoria integer NOT NULL
);


ALTER TABLE public.produtos OWNER TO postgres;

--
-- Name: produtos_idproduto_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.produtos_idproduto_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.produtos_idproduto_seq OWNER TO postgres;

--
-- Name: produtos_idproduto_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.produtos_idproduto_seq OWNED BY public.produtos.idproduto;


--
-- Name: saidas; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.saidas (
    numeronfsaida integer NOT NULL,
    data date NOT NULL,
    valortotal numeric NOT NULL,
    idcliente integer NOT NULL,
    idusuario integer NOT NULL
);


ALTER TABLE public.saidas OWNER TO postgres;

--
-- Name: saidas_numeronfsaida_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.saidas_numeronfsaida_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.saidas_numeronfsaida_seq OWNER TO postgres;

--
-- Name: saidas_numeronfsaida_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.saidas_numeronfsaida_seq OWNED BY public.saidas.numeronfsaida;


--
-- Name: usuarios; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.usuarios (
    idusuario integer NOT NULL,
    nome character varying(50) NOT NULL,
    email character varying(50) NOT NULL,
    senha character varying(10) NOT NULL,
    tipodeusuario integer DEFAULT 0 NOT NULL,
    logradouro character varying(50),
    numero integer,
    complemento character varying(50),
    cep character varying(8),
    cidade character varying(50),
    uf character varying(2)
);


ALTER TABLE public.usuarios OWNER TO postgres;

--
-- Name: usuarios_idusuario_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.usuarios_idusuario_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.usuarios_idusuario_seq OWNER TO postgres;

--
-- Name: usuarios_idusuario_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.usuarios_idusuario_seq OWNED BY public.usuarios.idusuario;


--
-- Name: categorias idcategoria; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.categorias ALTER COLUMN idcategoria SET DEFAULT nextval('public.categorias_idcategoria_seq'::regclass);


--
-- Name: clientes idcliente; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.clientes ALTER COLUMN idcliente SET DEFAULT nextval('public.clientes_idcliente_seq'::regclass);


--
-- Name: entradas numeronfentrada; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.entradas ALTER COLUMN numeronfentrada SET DEFAULT nextval('public.entradas_numeronfentrada_seq'::regclass);


--
-- Name: fornecedores idfornecedor; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fornecedores ALTER COLUMN idfornecedor SET DEFAULT nextval('public.fornecedores_idfornecedor_seq'::regclass);


--
-- Name: itens_entrada iditemcompra; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itens_entrada ALTER COLUMN iditemcompra SET DEFAULT nextval('public.itens_entrada_iditemcompra_seq'::regclass);


--
-- Name: itens_saida iditemvenda; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itens_saida ALTER COLUMN iditemvenda SET DEFAULT nextval('public.itens_saida_iditemvenda_seq'::regclass);


--
-- Name: produtos idproduto; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.produtos ALTER COLUMN idproduto SET DEFAULT nextval('public.produtos_idproduto_seq'::regclass);


--
-- Name: saidas numeronfsaida; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.saidas ALTER COLUMN numeronfsaida SET DEFAULT nextval('public.saidas_numeronfsaida_seq'::regclass);


--
-- Name: usuarios idusuario; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuarios ALTER COLUMN idusuario SET DEFAULT nextval('public.usuarios_idusuario_seq'::regclass);


--
-- Data for Name: categorias; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.categorias (idcategoria, descricao) FROM stdin;
1	Alimento
2	Ferramenta
3	Utensílio
4	Outros
5	Material Contrução
\.


--
-- Data for Name: clientes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.clientes (idcliente, nome, email, logradouro, numero, complemento, cep, cidade, uf) FROM stdin;
2	Wynn Lakes	wlakes1@forbes.com	1061 Dovetail Point	88466124	teste	667	Pingqiao	CN
3	Shaine Saint	ssaint2@twitpic.com	2 Blackbird Parkway	88016303	teste	150	Genova	IT
4	Tami Pleming	tpleming3@hubpages.com	88 Fair Oaks Road	88443800	teste	382	Zhoutian	CN
5	Jedd Ditter	jditter4@nymag.com	0638 Laurel Drive	88757701	teste	865	Phong Điền	VN
6	Loralie Cornill	lcornill5@baidu.com	39 Blackbird Avenue	88890255	teste	478	Tanenofunan	ID
7	Aprilette Von Gladbach	avon6@howstuffworks.com	720 Maple Wood Way	88143187	teste	778	Biscoitos	PT
8	Pinchas Bewsey	pbewsey7@digg.com	0 Meadow Vale Crossing	88776770	teste	235	Wissous	FR
9	Merci Lineker	mlineker8@newyorker.com	1 East Pass	88096833	teste	266	Parravak’ar	AM
10	Ignaz Clowton	iclowton9@msn.com	2 Chive Lane	88052572	teste	351	Shuiyin	CN
11	Rois Trouel	rtrouela@ifeng.com	26 Reinke Crossing	88646974	teste	559	Thị Trấn Vạn Hà	VN
12	Jodi Roubert	jroubertb@phpbb.com	6 Eagle Crest Park	88322654	teste	611	Tielou	CN
13	Balduin Jolliff	bjolliffc@hao123.com	39866 5th Alley	88443899	teste	805	Loyola	PH
14	Regine Goodboddy	rgoodboddyd@foxnews.com	3 Clemons Center	88165069	teste	344	Makuyuni	TZ
15	Roger Linthead	rlintheade@alibaba.com	3 4th Plaza	88860931	teste	833	Tola	NI
16	Allayne Elphinstone	aelphinstonef@shinystat.com	579 Corry Court	88337124	teste	831	Dingli	MT
17	Tailor Bresnahan	tbresnahang@mit.edu	43 Bonner Street	88673132	teste	328	Baitao	CN
18	Kimberlee Annets	kannetsh@51.la	171 Judy Park	88707495	teste	614	Värnamo	SE
19	Greta Dow	gdowi@nasa.gov	95 Algoma Circle	88934311	teste	796	Senadan	ID
20	Darb Hansen	dhansenj@cnbc.com	70 Morningstar Circle	88856820	teste	386	Papatowai	NZ
21	Omero Twitchings	otwitchingsk@t.co	7 Novick Drive	88117636	teste	931	Sukorejo	ID
22	Magda Ladyman	mladymanl@cafepress.com	642 Lunder Court	88102473	teste	295	Calhetas	PT
23	Marcella Holtham	mholthamm@jigsy.com	795 Dixon Street	88861163	teste	117	Dengzishan	CN
24	Rozanne Brenston	rbrenstonn@chron.com	963 Lillian Park	88100221	teste	313	Machang	CN
25	Pamela Doudny	pdoudnyo@latimes.com	5782 Anzinger Pass	88865654	teste	678	Knoxville	US
26	Alfy Mougeot	amougeotp@redcross.org	57564 Darwin Plaza	88842993	teste	716	Old City	PS
27	Shel Westlake	swestlakeq@blinklist.com	70084 Cherokee Street	88393142	teste	80	Visby	SE
28	Kiel Lines	klinesr@webmd.com	006 David Hill	88695339	teste	697	Dunleer	IE
29	Kerri Eckersall	keckersalls@goo.gl	7005 Farragut Circle	88003514	teste	388	Mosty	PL
30	Kass Cussins	kcussinst@ibm.com	64 Anniversary Center	88333828	teste	642	Tapacocha	PE
31	Lee Dowtry	ldowtryu@ezinearticles.com	8 Melody Road	88864146	teste	216	Xijia	CN
33	Innis Gillinghams	igillinghamsw@latimes.com	3 Corscot Point	88547046	teste	501	Zabierzów	PL
34	Carmela Kelinge	ckelingex@zimbio.com	9183 Vera Hill	88843358	teste	375	Richmond	JM
35	Shea Bowlands	sbowlandsy@senate.gov	32 Hooker Trail	88407767	teste	722	Marseille	FR
36	Lothario Monnoyer	lmonnoyerz@npr.org	5791 Fieldstone Point	88144389	teste	894	Pasongsongan	ID
37	Lavinie Poole	lpoole10@huffingtonpost.com	18 Forest Run Trail	88695394	teste	218	Coronel Vivida	BR
38	Thornie Amott	tamott11@mit.edu	23 Banding Road	88393693	teste	913	Conceição das Alagoas	BR
39	Shauna Romera	sromera12@wired.com	848 Delladonna Parkway	88759709	teste	288	Mukacheve	UA
40	Kristofer Cleatherow	kcleatherow13@vimeo.com	863 Myrtle Point	88044615	teste	499	Leping	CN
41	Laurent Dwelling	ldwelling14@usatoday.com	82401 Knutson Terrace	88509260	teste	449	Kumanis	ID
42	Kim Pickerell	kpickerell15@earthlink.net	5516 Crescent Oaks Circle	88905963	teste	854	Pandanwangi	ID
43	Ofilia McFetridge	omcfetridge16@i2i.jp	80 American Drive	88653242	teste	228	Ashtarak	AM
44	Carmella Ladson	cladson17@devhub.com	1147 Acker Center	88344372	teste	241	Usu	CN
45	Parker Durkin	pdurkin18@clickbank.net	95495 Mockingbird Crossing	88985648	teste	393	Andamui	ID
46	Yale Clemmitt	yclemmitt19@indiegogo.com	0492 Roxbury Park	88369436	teste	941	San Pedro	MX
47	Georgi Louca	glouca1a@forbes.com	450 Monterey Parkway	88865813	teste	569	Verkhnyaya Toyma	RU
48	Aubrie Annis	aannis1b@nps.gov	7301 Petterle Junction	88681181	teste	367	Langádhia	GR
49	Aurie Almey	aalmey1c@creativecommons.org	62239 American Ash Drive	88545469	teste	621	Washington	US
50	Cecil Brightling	cbrightling1d@huffingtonpost.com	55899 Meadow Vale Crossing	88947512	teste	333	Stockholm	SE
51	Betteanne Grumbridge	bgrumbridge1e@sitemeter.com	3615 Rieder Crossing	88717177	teste	790	Orlovat	RS
52	Rickert Paley	rpaley1f@plala.or.jp	969 Dwight Point	88739506	teste	25	Libertad	PH
53	Alys Silverman	asilverman1g@nba.com	4099 Longview Road	88447037	teste	679	Kotingnatagete	ID
54	Misty Schwanden	mschwanden1h@nationalgeographic.com	7491 Spaight Alley	88502955	teste	402	Burauen	PH
55	Padraic Robottom	probottom1i@yellowbook.com	676 Warner Terrace	88915006	teste	216	Uychi	UZ
56	Wallis Craister	wcraister1j@blog.com	042 Eastwood Avenue	88092902	teste	356	Dagang	CN
57	Enrique Fritschmann	efritschmann1k@altervista.org	3 Armistice Circle	88133405	teste	30	Weishan	CN
58	Moyna Goodisson	mgoodisson1l@aboutads.info	78757 Cambridge Way	88888510	teste	854	Kourou	GF
59	Vladimir Newnham	vnewnham1m@ucoz.ru	69067 Lien Road	88801345	teste	808	Xindi	CN
60	Nicky Aylmore	naylmore1n@meetup.com	83 Ilene Center	88315701	teste	504	Sevilla	ES
62	Heidi Cordrey	hcordrey1p@unicef.org	19 Prentice Lane	88112255	teste	410	Orlová	CZ
63	Roth Ortiga	rortiga1q@cyberchimps.com	9249 Butterfield Point	88375454	teste	783	Chợ Chu	VN
64	Hugo Garrals	hgarrals1r@europa.eu	16814 Holy Cross Park	88568378	teste	830	Seulimeum	ID
65	Bird Overpool	boverpool1s@ycombinator.com	6268 Stoughton Street	88930483	teste	717	Huddinge	SE
1	Edd Edlington	eedlington0@zimbio.com	6043 Laurel Street	88695444	teste	182	Nīkshahr	IR
32	Doroteya Dacey	ddaceyv@over-blog.com	928 Onsgard Trail	88840828	teste	236	Portelinha	PT
61	Amy Furmston	afurmston1o@tumblr.com	0751 Karstens Avenue	88394299	teste	375	Kamień Pomorski	PL
66	Raychel Ciobutaro	rciobutaro1t@google.de	647 Sugar Court	88956345	teste	831	Téra	NE
67	Cly O'Shevlin	coshevlin1u@bandcamp.com	13760 Maryland Place	88281773	teste	581	Yongchang	CN
68	Julius Matushenko	jmatushenko1v@yandex.ru	6 Logan Center	88816944	teste	794	Sarandi	BR
69	Antonella Korneichuk	akorneichuk1w@google.ru	47362 Homewood Circle	88069293	teste	602	Tranås	SE
70	Karlen Ottosen	kottosen1x@nydailynews.com	46647 Marquette Alley	88857288	teste	264	Canta	PE
71	Colline Scotson	cscotson1y@twitter.com	1 Jay Alley	88739782	teste	147	Colón	PA
72	Brody Willatt	bwillatt1z@netvibes.com	47 Northland Way	88080072	teste	633	Svenljunga	SE
73	Ava MacKill	amackill20@tripadvisor.com	84 Canary Pass	88252052	teste	832	Junín	CO
74	Jo Renachowski	jrenachowski21@kickstarter.com	5762 Utah Point	88193860	teste	888	Zhanggongmiao	CN
75	Felike Whitnall	fwhitnall22@123-reg.co.uk	747 Clove Street	88160049	teste	647	Laifang	CN
76	Frans Swatheridge	fswatheridge23@unc.edu	38 Arizona Junction	88465227	teste	435	Tullyallen	IE
77	Muriel O'Cahsedy	mocahsedy24@mit.edu	3211 Londonderry Road	88820979	teste	155	Rydułtowy	PL
78	Bailie Bulleyn	bbulleyn25@xinhuanet.com	495 Sloan Street	88771356	teste	326	São Miguel do Guamá	BR
79	Cecilia Liggons	cliggons26@china.com.cn	575 Division Center	88119726	teste	735	Cedynia	PL
80	Knox Streeton	kstreeton27@nationalgeographic.com	93741 Pennsylvania Street	88588451	teste	7	Ketanen	ID
81	Maighdiln Grinyer	mgrinyer28@mtv.com	4 Northview Plaza	88920622	teste	391	Masu	ID
82	Trent De Wolfe	tde29@blogtalkradio.com	4 Kim Road	88114837	teste	874	Ciudad Cortés	CR
83	Elianore Cannell	ecannell2a@bbb.org	80572 Sunfield Hill	88587000	teste	725	Leluo	CN
84	Adina De Coursey	ade2b@businesswire.com	412 Ohio Alley	88753181	teste	304	Khoronk’	AM
85	Siusan Cosham	scosham2c@jimdo.com	6342 Forest Avenue	88441751	teste	414	Mingguang	CN
86	Leicester Rappaport	lrappaport2d@yandex.ru	318 David Road	88168607	teste	339	Shagonar	RU
87	Olva Witterick	owitterick2e@wix.com	21256 Weeping Birch Way	88171622	teste	494	Surazh	RU
88	Modestia Paty	mpaty2f@w3.org	2 Blue Bill Park Drive	88731641	teste	619	Hyesan-dong	KP
89	Kelli Garret	kgarret2g@army.mil	26 Melody Plaza	88255584	teste	520	Strzelin	PL
90	Luce Lehrian	llehrian2h@dmoz.org	94 Clemons Pass	88280963	teste	296	Kiarajangkung	ID
91	Davidson Trevan	dtrevan2i@bloglovin.com	2305 David Plaza	88693313	teste	475	Rio Meão	PT
92	Ailey Penswick	apenswick2j@vimeo.com	8 Dottie Parkway	88690519	teste	596	Haveluloto	TO
93	Burton Rizziello	brizziello2k@abc.net.au	60803 Ridge Oak Street	88518805	teste	116	Shetan	CN
94	Benedikt Crossfield	bcrossfield2l@wp.com	4 Anzinger Pass	88640266	teste	189	Oklahoma City	US
95	Darbee Attac	dattac2m@economist.com	96761 Atwood Avenue	88500464	teste	764	Hongshi	CN
96	Ram Blitz	rblitz2n@guardian.co.uk	7 Crescent Oaks Street	88428316	teste	100	Zoumaping	CN
97	Terrel Whitrod	twhitrod2o@cdbaby.com	48649 Gale Road	88170393	teste	243	Calidñgan	PH
98	Masha Gannicott	mgannicott2p@mtv.com	40780 Lunder Crossing	88371402	teste	799	Taoyao	CN
99	Stephana Blaisdell	sblaisdell2q@theglobeandmail.com	9420 Loomis Place	88913929	teste	862	Kadyy	RU
100	Farrand Dienes	fdienes2r@huffingtonpost.com	23 1st Court	88339162	teste	369	Gaoxu	CN
\.


--
-- Data for Name: entradas; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.entradas (numeronfentrada, data, valortotal, idfornecedor) FROM stdin;
4	2019-12-10	7500	4
5	2019-11-10	7000	5
1	2021-09-25	5990	1
2	2022-02-02	24998.06	2
3	2022-02-25	49996	3
\.


--
-- Data for Name: fornecedores; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.fornecedores (idfornecedor, nome, email, logradouro, numero, complemento, cep, cidade, uf) FROM stdin;
1	Eddie Materiais de Construção	ed.die@ironmaiden.com.br	Rua Iron Maiden	666	The Number Of The Beast	88000666	London	IM
2	Jason Alimentos	better_than_trujillo@hotmail.com	Rua Metallica	1010	For Whom The Bell Tolls	88888888	Rua Enter Sandman	MT
3	AC/DC Sacos de Lixo	imonthe@highway.to.hell	Av. Back In Black	999	Contrata-se Baterista	88777999	Hell	ST
4	Led Zeppelin	led@zeppelin.com.br	Av. Stairway to Heaven	777	Heaven	88777777	Heaven	HE
5	Pink Floyd Utensílios	confortablynumb@pk.com.br	Av. PF 	222	PF	88777456	Rua blablabla	TT
\.


--
-- Data for Name: itens_entrada; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.itens_entrada (iditemcompra, quantidade, valorunitario, idproduto, numeronfentrada) FROM stdin;
1	100	5.99	9	1
2	625	15.99	1	2
3	1669	8.99	2	2
4	2083	12	7	3
5	3125	8	8	3
6	2332	1.5	5	5
7	2334	1.5	6	5
\.


--
-- Data for Name: itens_saida; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.itens_saida (iditemvenda, quantidade, valorunitario, numeronfsaida, idproduto) FROM stdin;
1	793	3.15	1	4
2	793	3.15	1	5
3	12	21	2	3
4	200	12.58	3	9
5	416	16.8	5	8
\.


--
-- Data for Name: produtos; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.produtos (idproduto, descricao, precocusto, precovenda, quantidadeestoque, idcategoria) FROM stdin;
1	Arroz	15.99	33.58	8	1
2	Feijão	8.99	18.88	7	1
3	Martelo	10	21	3	2
4	Prego	1	2.1	10	2
5	Colher	1.5	3.15	13	3
6	Faca	1.5	3.15	13	3
7	Saco de lixo	12	25.2	7	4
8	Palito de churrasco	8	16.8	5	4
9	Tijolo	5.99	12.58	200	5
10	Cimento	25.99	54.58	20	5
11	Fiação de luz 2.5mm	10	21	50	5
12	Registro água	10	21	50	5
\.


--
-- Data for Name: saidas; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.saidas (numeronfsaida, data, valortotal, idcliente, idusuario) FROM stdin;
1	2022-08-25	4995.9	50	1
4	2022-03-25	450	1	2
2	2022-06-12	252	30	1
3	2022-09-09	2516	29	1
5	2022-11-05	6988.8	2	2
\.


--
-- Data for Name: usuarios; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.usuarios (idusuario, nome, email, senha, tipodeusuario, logradouro, numero, complemento, cep, cidade, uf) FROM stdin;
1	Felipe	felipe.kemp@gmail.com	1234	0	R. Bahia	123	Fundos	88339065	Camboriú	SC
2	Rodrigo	rodrigo.teste@hotmail.com	1234	0	R. Rio de Janeiro	321	Casa	88410370	Fraiburgo	SC
3	Ricardo	ricardo.teste@live.com	1234	0	R. Brasília	444	Casa	89330444	Curitiba	PR
4	Juliana	juli.ana@bol.com.br	1234	0	Av. Santa Catarina	54	Apto. 101	89354687	São Paulo	SP
5	Fernanda	fernanda123@gmail.com	1234	0	Av. Barão do rio Branco	23	Apto 201	88640971	Goiânia	GO
\.


--
-- Name: categorias_idcategoria_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.categorias_idcategoria_seq', 5, true);


--
-- Name: clientes_idcliente_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.clientes_idcliente_seq', 204, true);


--
-- Name: entradas_numeronfentrada_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.entradas_numeronfentrada_seq', 5, true);


--
-- Name: fornecedores_idfornecedor_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.fornecedores_idfornecedor_seq', 5, true);


--
-- Name: itens_entrada_iditemcompra_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.itens_entrada_iditemcompra_seq', 7, true);


--
-- Name: itens_saida_iditemvenda_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.itens_saida_iditemvenda_seq', 5, true);


--
-- Name: produtos_idproduto_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.produtos_idproduto_seq', 12, true);


--
-- Name: saidas_numeronfsaida_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.saidas_numeronfsaida_seq', 12, true);


--
-- Name: usuarios_idusuario_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.usuarios_idusuario_seq', 5, true);


--
-- Name: categorias categorias_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.categorias
    ADD CONSTRAINT categorias_pkey PRIMARY KEY (idcategoria);


--
-- Name: clientes clientes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.clientes
    ADD CONSTRAINT clientes_pkey PRIMARY KEY (idcliente);


--
-- Name: entradas entradas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.entradas
    ADD CONSTRAINT entradas_pkey PRIMARY KEY (numeronfentrada);


--
-- Name: fornecedores fornecedores_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fornecedores
    ADD CONSTRAINT fornecedores_pkey PRIMARY KEY (idfornecedor);


--
-- Name: itens_entrada itens_entrada_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itens_entrada
    ADD CONSTRAINT itens_entrada_pkey PRIMARY KEY (iditemcompra);


--
-- Name: itens_saida itens_saida_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itens_saida
    ADD CONSTRAINT itens_saida_pkey PRIMARY KEY (iditemvenda);


--
-- Name: produtos produtos_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.produtos
    ADD CONSTRAINT produtos_pkey PRIMARY KEY (idproduto);


--
-- Name: saidas saidas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.saidas
    ADD CONSTRAINT saidas_pkey PRIMARY KEY (numeronfsaida);


--
-- Name: usuarios usuarios_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuarios
    ADD CONSTRAINT usuarios_pkey PRIMARY KEY (idusuario);


--
-- Name: entradas entradas_idfornecedor_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.entradas
    ADD CONSTRAINT entradas_idfornecedor_fkey FOREIGN KEY (idfornecedor) REFERENCES public.fornecedores(idfornecedor) ON DELETE CASCADE;


--
-- Name: itens_entrada itens_entrada_idproduto_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itens_entrada
    ADD CONSTRAINT itens_entrada_idproduto_fkey FOREIGN KEY (idproduto) REFERENCES public.produtos(idproduto) ON DELETE CASCADE;


--
-- Name: itens_entrada itens_entrada_numeronfentrada_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itens_entrada
    ADD CONSTRAINT itens_entrada_numeronfentrada_fkey FOREIGN KEY (numeronfentrada) REFERENCES public.entradas(numeronfentrada) ON DELETE CASCADE;


--
-- Name: itens_saida itens_saida_idproduto_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itens_saida
    ADD CONSTRAINT itens_saida_idproduto_fkey FOREIGN KEY (idproduto) REFERENCES public.produtos(idproduto) ON DELETE CASCADE;


--
-- Name: itens_saida itens_saida_numeronfsaida_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.itens_saida
    ADD CONSTRAINT itens_saida_numeronfsaida_fkey FOREIGN KEY (numeronfsaida) REFERENCES public.saidas(numeronfsaida) ON DELETE CASCADE;


--
-- Name: produtos produtos_idcategoria_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.produtos
    ADD CONSTRAINT produtos_idcategoria_fkey FOREIGN KEY (idcategoria) REFERENCES public.categorias(idcategoria) ON DELETE CASCADE;


--
-- Name: saidas saidas_idcliente_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.saidas
    ADD CONSTRAINT saidas_idcliente_fkey FOREIGN KEY (idcliente) REFERENCES public.clientes(idcliente) ON DELETE CASCADE;


--
-- Name: saidas saidas_idusuario_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.saidas
    ADD CONSTRAINT saidas_idusuario_fkey FOREIGN KEY (idusuario) REFERENCES public.usuarios(idusuario) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

